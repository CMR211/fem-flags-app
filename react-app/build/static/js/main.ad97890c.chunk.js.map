{"version":3,"sources":["logo.svg","Components/Header.js","Components/Country.js","Components/Modal.js","Components/CountriesWrapper.js","Components/RegionsDropdown.js","Components/Searchbar.js","Components/Wrapper.js","App.js","reportWebVitals.js","index.js"],"names":["darkModeIcon","className","xmlns","height","viewBox","width","fill","d","lightModeIcon","Header","colorMode","setColorMode","colors","style","onClick","Country","countries","countryID","showModal","countryData","appearence","useSpring","from","opacity","transform","to","el","result","undefined","arr","split","length","toLocaleString","div","alt","src","name","population","area","region","capital","iconClose","Modal","modalCountryID","setModalCountryID","hideModal","animationAppearance","getCountryData","id","type","countryBorders","map","element","borderCountryIndex","findIndex","item","CountriesWrapper","allcountries","countriesCards","index","indexOf","React","useState","isModalVisible","setIsModalVisible","AnimatedModal","animated","clearIcon","RegionsDropdown","filterByRegion","clearFilter","isHover","setHover","buttons","onMouseEnter","onMouseLeave","Searchbar","filterByName","placeholder","onChange","autoComplete","Wrapper","isDataLoaded","setIsDataLoaded","fetchedCountriesList","setFetchedCountriesList","filteredCountriesList","setFilteredCountriesList","useEffect","API_URL","a","fetch","response","json","fetchAPI","e","res","filter","toLowerCase","includes","target","value","display","placeItems","App","light","dark","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad97890c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport styles from \"./Header.css\"\r\n// import darkModeIcon from \"../Icons/dark_mode_black_24dp.svg\"\r\n// import lightModeIcon from \"../Icons/light_mode_black_24dp.svg\"\r\n\r\nconst darkModeIcon = \r\n<svg className=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"currentColor\"><rect fill=\"none\" height=\"24\" width=\"24\"/><path d=\"M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z\"/></svg>\r\n\r\nconst lightModeIcon = \r\n<svg className=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"currentColor\"><rect fill=\"none\" height=\"24\" width=\"24\"/><path d=\"M12,9c1.65,0,3,1.35,3,3s-1.35,3-3,3s-3-1.35-3-3S10.35,9,12,9 M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5 S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1 s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41 L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z\"/></svg>\r\n\r\nexport default Header;\r\n\r\nfunction Header ( {colorMode, setColorMode, colors} ) {\r\n\r\n  function toggleColorMode () {\r\n    if (colorMode === \"light\") setColorMode(\"dark\");\r\n    if (colorMode === \"dark\") setColorMode(\"light\");\r\n  }\r\n\r\n  return (\r\n    <header style={colors[colorMode]}>\r\n      <div>\r\n        <h1>Where in the world?</h1>\r\n        <button \r\n        className=\"minimal-button\"\r\n        onClick={toggleColorMode}>\r\n          {colorMode === \"dark\" ? lightModeIcon : darkModeIcon}\r\n          {(colorMode === \"light\") ? \"Dark Mode\" : \"Light Mode\"}\r\n          </button>\r\n      </div>\r\n    </header>\r\n  )\r\n}","import React from 'react'\r\nimport styles from \"./Country.css\"\r\nimport {useSpring, animated} from 'react-spring'\r\n\r\nexport default Country;\r\n\r\nfunction Country ( {countries, countryID, showModal} ) {\r\n\r\n  const countryData = {};\r\n  const propertiesArray = [\"name\", \"population\", \"area\", \"region\", \"capital\"]; \r\n\r\n  const appearence = useSpring({\r\n    from: { opacity: 0, transform: 'translateY(-100px)'},\r\n    to: { opacity: 1, transform: 'translateY(0px)'},\r\n  })\r\n\r\n  for (let el of propertiesArray) {\r\n    let result;\r\n    if (countries[countryID][el] === undefined) result = \"--\"\r\n    else {\r\n      result = countries[countryID][el];\r\n      if (el === \"name\") {\r\n        const arr = result.split(\"(\");\r\n        if (arr.length > 1) arr[1] = `(${arr[1]}`;\r\n        result = [];\r\n        result[0] = arr[0];\r\n        result[1] = arr[1];\r\n      }\r\n      if (el === \"area\") result = result.toLocaleString() + \" km2\";\r\n      if (el === \"population\") result = result.toLocaleString();\r\n    }\r\n\r\n    countryData[el] = result;\r\n  }\r\n\r\n  return (\r\n    <animated.div style={appearence} className=\"country\" onClick={() => showModal(countryID)}>\r\n      <img \r\n      alt=\"country flag\" \r\n      src={countries[countryID][\"flags\"][\"svg\"]} />\r\n      <div className=\"country-info\">\r\n        <h2>{countryData.name[0]}</h2>\r\n        <span>{countryData.name[1]}</span>\r\n        <p><span>Population: </span>{countryData.population}</p>\r\n        <p><span>Area: </span>{countryData.area}</p>\r\n        <p><span>Region: </span>{countryData.region}</p>\r\n        <p><span>Capital: </span>{countryData.capital}</p>\r\n      </div>\r\n    </animated.div>\r\n  )\r\n}","import React from \"react\"\r\nimport styles from \"./Modal.css\"\r\nimport { useSpring, useTransition, animated } from 'react-spring'\r\n\r\nconst iconClose = <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"currentColor\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\r\n\r\nexport default function Modal ( {modalCountryID, setModalCountryID, hideModal, countries} ) {\r\n\r\n  const animationAppearance = useSpring({\r\n    from: { opacity: 0, transform: 'translateY(-30px) scale(1.05)', },\r\n    to: { opacity: 1, transform: 'translateY(0px) scale(1.0)', },\r\n  })\r\n\r\n  function getCountryData(id,type) {\r\n    if (countries[id][type] === undefined) return \"--\"\r\n    if (type === \"area\") return `${countries[id][type].toLocaleString()} km2`\r\n    return countries[id][type]\r\n  }\r\n\r\n  function getCountryBorders() {\r\n    if (countries[modalCountryID][\"borders\"] === undefined) return null\r\n    return countries[modalCountryID][\"borders\"].map(element => {\r\n      const borderCountryIndex = countries.findIndex(item => item[\"alpha3Code\"] === element)\r\n      return (\r\n        <button onClick={() => setModalCountryID(borderCountryIndex)}>\r\n          {getCountryData(borderCountryIndex, \"name\")}\r\n        </button>\r\n      )\r\n    })\r\n  }\r\n\r\n  const countryBorders = getCountryBorders()\r\n\r\n  return (\r\n    <animated.div style={animationAppearance} className=\"modal-main\">\r\n      <div className=\"modal-content\">\r\n        <button onClick={() => hideModal()}>{iconClose}</button>\r\n        <img alt=\"country flag\" src={countries[modalCountryID][\"flags\"][\"svg\"]} />\r\n        <div className=\"modal-header\">\r\n          <h1>{countries[modalCountryID][\"name\"]}</h1>\r\n          <h2 className=\"modal-domain\">{countries[modalCountryID][\"topLevelDomain\"]}</h2>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"modal-details\">\r\n            <p className=\"modal-details-par\">Capital:<br />{getCountryData(modalCountryID, \"capital\")}</p>\r\n            <p className=\"modal-details-par\">Population:<br />{getCountryData(modalCountryID, \"population\").toLocaleString()}</p>\r\n            <p className=\"modal-details-par\">Area:<br />{getCountryData(modalCountryID, \"area\").toLocaleString()}</p>\r\n            <p className=\"modal-details-par\">Region:<br />{getCountryData(modalCountryID, \"region\")}</p>\r\n          </div>\r\n          <div>\r\n            <h3>Borders with:</h3>\r\n            <div className=\"modal-borders\">\r\n              {countryBorders ?? \"Noone :(\"}\r\n            </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"clicktohide\" onClick={() => hideModal()}></div>\r\n    </animated.div>\r\n  )\r\n}","import React from 'react'\r\nimport Country from './Country';\r\nimport Modal from './Modal';\r\nimport styles from \"./CountriesWrapper.css\"\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nexport default CountriesWrapper;\r\n\r\nfunction CountriesWrapper ( {countries, allcountries} ) {\r\n\r\n  const countriesCards = countries.map( (item, index) => \r\n    <Country \r\n      key={index}\r\n      countries={allcountries} \r\n      countryID={allcountries.indexOf(item)} \r\n      showModal={showModal}\r\n    />\r\n  )\r\n\r\n  const [isModalVisible, setIsModalVisible] = React.useState(false);\r\n  const [modalCountryID, setModalCountryID] = React.useState(0);\r\n\r\n  const animation = useSpring({\r\n    opacity: isModalVisible ? '1' : '0',\r\n  })\r\n\r\n  const AnimatedModal = animated(Modal)\r\n\r\n  function showModal (id) {\r\n    setModalCountryID(id);\r\n    setIsModalVisible(true);\r\n  }\r\n\r\n  function hideModal () {\r\n    setIsModalVisible(false);\r\n  }\r\n\r\n  return (\r\n    <div id=\"countries-wrapper\">\r\n      {countriesCards}\r\n      {isModalVisible && \r\n        <AnimatedModal \r\n          modalCountryID={modalCountryID} \r\n          setModalCountryID={setModalCountryID}\r\n          hideModal={hideModal} \r\n          countries={allcountries}\r\n        /> \r\n      }\r\n\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport styles from \"./RegionsDropdown.css\"\r\n\r\nconst clearIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"currentColor\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\r\n\r\nexport default function RegionsDropdown ( {filterByRegion, clearFilter} ) {\r\n\r\n  const [isHover, setHover] = React.useState(false);\r\n  const regions = [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"];\r\n  const buttons = regions.map(\r\n    item => <button onClick={() => filterByRegion(item)} className=\"searchbar\">{item}</button>\r\n  )\r\n\r\n  return (\r\n    <div \r\n      onMouseEnter={() => setHover(true)} \r\n      onMouseLeave={() => setHover(false)} \r\n      onClick={() => setHover(!isHover)}\r\n      className=\"dropdown\">\r\n      <button className=\"searchbar\">Filter by regions...</button>\r\n      {!isHover ? null : (\r\n        <div className=\"dropdown-menu\">\r\n          <button onClick={() => clearFilter()} className=\"searchbar\">\r\n            {clearIcon}\r\n            Clear filter\r\n          </button>\r\n          {buttons}\r\n        </div>\r\n      ) }\r\n    </div>\r\n  )\r\n}","import React from \"react\"\r\nimport styles from \"./Searchbar.css\"\r\n\r\nexport default function Searchbar ( {filterByName} ) {\r\n  return (\r\n    <input \r\n      className=\"searchbar\"\r\n      id=\"countrysearch\" \r\n      placeholder=\"Search for a country...\" \r\n      onChange={filterByName}\r\n      autoComplete=\"off\"\r\n    />\r\n  )\r\n}","import React from \"react\";\r\nimport styles from \"./Wrapper.css\";\r\nimport CountriesWrapper from \"./CountriesWrapper\"\r\nimport RegionsDropdown from \"./RegionsDropdown\";\r\nimport Searchbar from \"./Searchbar\";\r\n\r\nexport default Wrapper;\r\n\r\nfunction Wrapper ( {colors, colorMode} ) {\r\n\r\n  const [isDataLoaded, setIsDataLoaded] = React.useState(false);\r\n  const [fetchedCountriesList, setFetchedCountriesList] = React.useState();\r\n  const [filteredCountriesList, setFilteredCountriesList] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    const API_URL = `https://restcountries.com/v2/all`;\r\n    async function fetchAPI () {\r\n      setIsDataLoaded(false);\r\n      const response = await fetch(API_URL);\r\n      const result = await response.json();\r\n      setFetchedCountriesList(result);\r\n      setFilteredCountriesList(result);\r\n      setIsDataLoaded(true);\r\n    };\r\n    fetchAPI();\r\n  }, [] );\r\n\r\n  function filterByRegion (region) {\r\n    if (isDataLoaded) {\r\n      const res = fetchedCountriesList.filter(\r\n        item => item[\"region\"] === region\r\n      )\r\n      setFilteredCountriesList(res);\r\n    }\r\n  }\r\n\r\n  function clearFilter () {\r\n    if (isDataLoaded) {\r\n      setFilteredCountriesList(fetchedCountriesList);\r\n    }\r\n  }\r\n\r\n  function filterByName (e) {\r\n    if (isDataLoaded) {\r\n      const res = fetchedCountriesList.filter(\r\n        item => item[\"name\"].toLowerCase().includes(e.target.value.toLowerCase())\r\n      )\r\n      setFilteredCountriesList(res)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main style={colors[colorMode]}>\r\n\r\n      <div id=\"searchdiv\">\r\n        <Searchbar filterByName={filterByName}/>\r\n        <RegionsDropdown filterByRegion={filterByRegion} clearFilter={clearFilter}/>\r\n      </div>\r\n\r\n      {isDataLoaded ? \r\n        (\r\n          <CountriesWrapper \r\n            colors={colors} \r\n            colorMode={colorMode} \r\n            countries={filteredCountriesList} \r\n            allcountries={fetchedCountriesList}/> \r\n        ) : (\r\n            <div style={{display: \"grid\", placeItems: \"center\"}}>Loading....</div>\r\n        )\r\n      }\r\n\r\n    </main>\r\n  )\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react'\r\nimport Header from \"./Components/Header\";\r\nimport Wrapper from './Components/Wrapper';\r\n\r\nfunction App() {\r\n\r\n  const [colorMode, setColorMode] = React.useState(\"light\");\r\n\r\n  const colors = {\r\n    light: {\r\n      \"--colortext\": \"hsl(200, 15%, 8%)\",\r\n      \"--colorbackground\": \"hsl(0, 0%, 98%)\",\r\n      \"--colorelements\": \"hsl(0, 0%, 100%)\",\r\n      \"--colorinput\": \"hsl(0, 0%, 52%)\",\r\n      \"--boxshadow\": \"2px 2px 7px 0px rgba(50, 50, 50, 0.2)\"\r\n    },\r\n    dark: {\r\n      \"--colortext\": \"hsl(0, 0%, 100%)\",\r\n      \"--colorbackground\": \"hsl(207, 26%, 17%)\",\r\n      \"--colorelements\": \"hsl(209, 23%, 22%)\",\r\n      \"--colorinput\": \"hsl(0, 0%, 100%)\",\r\n      \"--boxshadow\": \"2px 2px 7px 0px rgba(0, 0, 0, 0.2)\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" style={colors[colorMode]}>\r\n      <Header \r\n        colorMode={colorMode} \r\n        setColorMode={setColorMode} \r\n        colors={colors} />\r\n      <Wrapper\r\n        colorMode={colorMode}\r\n        colors={colors} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}